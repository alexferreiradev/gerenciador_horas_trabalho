# This is a basic workflow to help you get started with Actions

name: CD - Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        node-version: [12, 14, 16]
        
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v4
      with:
        node-version: ${{matrix.node-version}}
    - name: Install dependencies
      run: |
        cd frontend-web
        yarn install --immutable ${{ inputs.flags }}
      shell: bash
    - name: Build
      run: |
        cd frontend-web
        yarn build
    - uses: actions/upload-artifact@v4.3.1
      with:
        name: 'build-${{matrix.node-version}}'
        path: frontend-web/build
  create-tag:
    runs-on: ubuntu-latest
    needs: build
      
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    
  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - create-tag
    strategy: 
      matrix:
        node-version: [12, 14, 16]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v4.1.4
        with: 
          name: build-${{matrix.node-version}}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ needs.create-tag.steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          artifacts: build-${{matrix.node-version}}
          replacesArtifacts: false
          draft: true
          allowUpdates: true
          generateReleaseNotes: true
              
      
